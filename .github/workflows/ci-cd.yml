name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Initialize test database
      run: |
        cd backend
        npm run init-db

    - name: Run backend tests
      run: |
        cd backend
        npm test

    - name: Run backend tests with coverage
      run: |
        cd backend
        npm run test:coverage

    - name: Upload backend coverage
      uses: codecov/codecov-action@v4
      with:
        directory: backend/coverage
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install frontend dependencies
      run: npm ci

    - name: Run frontend tests
      run: npm test

    - name: Build frontend
      run: npm run build

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Install frontend dependencies
      run: npm ci

    - name: Start backend server
      run: |
        cd backend
        npm run init-db
        npm start &
        sleep 10
      env:
        NODE_ENV: test
        PORT: 3001

    - name: Build frontend
      run: npm run build

    - name: Run integration tests
      run: |
        cd backend
        npm run test -- --testPathPattern=integration
